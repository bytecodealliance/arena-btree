name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        rust_channel: ["stable", "beta", "nightly"]
        feature_set: ["--all-features", "--no-default-features"]

    runs-on: ubuntu-latest

    steps:
    - name: Install rustup
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal
    - name: Install rust channel
      run: rustup install ${{matrix.rust_channel}} && rustup default ${{matrix.rust_channel}}

    - uses: actions/checkout@v3

    - name: Build
      run: cargo build --verbose ${{matrix.feature_set}}
    - name: Run tests
      run: cargo test --verbose ${{matrix.feature_set}}

  fuzz:
    runs-on: ubuntu-latest
    steps:
    - name: Install rustup
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile=minimal
    - name: Install rust channel
      run: rustup install nightly && rustup default nightly

    - uses: actions/checkout@v3

    - name: Install cargo-fuzz
      run: cargo install cargo-fuzz
    - name: Run fuzzer for 5 minutes
      run: cargo fuzz run differential_map -- -max_total_time=$((5 * 60))

  miri:
    runs-on: ubuntu-latest

    env:
      MIRIFLAGS: "-Zmiri-strict-provenance"

    steps:
    - name: Install rustup
      run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain nightly -y
    - name: Install miri
      run: rustup toolchain install nightly --allow-downgrade --profile minimal --component miri

    - uses: actions/checkout@v2

    - name: Run miri
      run: cargo miri test --all-features
